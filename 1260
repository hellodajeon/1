#include <cstdio>
#include <queue>
#include <cstring>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> v[1001];
queue<int> q;
bool check[1001];

void dfs(int now)
{
    check[now]=true;
    printf("%d ", now);
    for(int i=0; i<v[now].size(); i++)
        if(!check[v[now][i]])
            dfs(v[now][i]);
}

void bfs(int start)
{
    check[start]=true;
    q.push(start);
    while(!q.empty())
    {
        int x=q.front();
        q.pop();
        printf("%d ", x);
        for(int i=0; i<v[x].size(); i++)
        {
            if(!check[v[x][i]])
            {
                check[v[x][i]]=true;
                q.push(v[x][i]);
            }
        }
    }
}

int main()
{
    int N, M, V;
    scanf("%d %d %d", &N, &M, &V);
    for(int i=0; i<M; i++)
    {
        int x, y;
        scanf("%d %d", &x, &y);
        v[x].push_back(y);
        v[y].push_back(x);
    }
    for(int i=1; i<=N; i++)
    {
        sort(v[i].begin(), v[i].end());
    }
    dfs(V);
    memset(check, false, sizeof(check));
    printf("\n");
    bfs(V);
}
