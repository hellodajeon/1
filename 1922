#include <cstdio>
#include <queue>
#include <vector>

using namespace std;

int parent[1001];
vector<pair<int,pair<int,int>>> v[1001];
priority_queue<pair<int,pair<int,int>>> q;

int Find(int x)
{
    if(x==parent[x])
        return x;
    return parent[x]=Find(parent[x]);
}

void Union(int a, int b)
{
    a=Find(a);
    b=Find(b);
    parent[a]=b;
}

int main()
{
    int n, m, ans=0;
    scanf("%d %d", &n, &m);
    for(int i=0; i<n; i++)
        parent[i]=i;
    for(int i=0; i<m; i++)
    {
        int a, b, cost;
        scanf("%d %d %d", &a, &b, &cost);
        q.push({-cost, {a, b}});
    }
    while(!q.empty())
    {
        pair<int, pair<int,int>> top=q.top();
        q.pop();
        if(Find(top.second.first)!=Find(top.second.second))
        {
            Union(top.second.first, top.second.second);
            ans-=top.first;
        }
    }
    printf("%d", ans);
}
